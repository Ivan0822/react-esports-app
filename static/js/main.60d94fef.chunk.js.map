{"version":3,"sources":["globalStyles.jsx","components/EventFilter/EventFilter.elements.jsx","components/EventFilter/EventFilter.jsx","services.js","components/Navbar/Navbar.elements.jsx","components/Navbar/Navbar.jsx","components/Event/Event.elements.jsx","components/Event/Event.jsx","components/EventList/EventList.elements.jsx","components/EventList/EventList.jsx","components/Worlds/Worlds.elements.jsx","components/Worlds/Worlds.jsx","components/Teams/Teams.elements.jsx","components/Teams/Team/Team.elements.jsx","components/Teams/Team/Team.jsx","components/Teams/Teams.jsx","components/Login/Login.elements.jsx","components/Login/Login.jsx","components/MyTeams/MyTeams.elements.jsx","components/MyTeams/MyTeam/MyTeam.elements.jsx","components/MyTeams/MyTeam/MyTeam.jsx","components/MyTeams/MyTeams.jsx","components/MyTeams/MyTeamRoster/MyTeamRoster.elements.jsx","components/MyTeams/MyTeamRoster/Player/Player.elements.jsx","components/MyTeams/MyTeamRoster/Player/Player.jsx","components/MyTeams/MyTeamRoster/MyTeamRoster.jsx","App.js","serviceWorker.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Container","styled","section","EventFilterBar","EventFilterContainer","EventSelectState","Select","EventFilter","allTournaments","setTourArray","tourArray","useState","selectGame","setSelectGame","selectTime","setSelectTime","useEffect","tmp","filter","el","videogame","slug","time","axios","get","then","res","getUniqueArray","data","console","log","FormControl","InputLabel","value","onChange","e","target","MenuItem","Nav","nav","NavbarContainer","NavLogo","Link","NavIcon","BiGame","MobileIcon","NavMenu","ul","click","NavItem","li","NavLinks","Navbar","setLogged","setClick","handleClick","Provider","color","to","onClick","exact","Button","variant","EventContainer","EventImageContainer","EventImage","img","EventDescContainer","Event","event","eventDate","begin_at","slice","id","src","league","image_url","name","serie","full_name","EventListLargeContainer","EventListSmallContainer","EventListGrid","EventList","count","setCount","disabled","length","map","key","serie_id","WorldsContainer","WorldsHeaderContainer","Worlds","game","TeamsContainer","TeamsHeaderContainer","TeamsGridContainer","form","TeamContainer","TeamImage","TeamName","span","TeamLike","Fab","Team","FavoriteIcon","team","favTeams","setFavTeams","button","setButton","btnRef","useRef","onMouseEnter","onMouseLeave","aria-label","preventDefault","current","setAttribute","push","ref","Teams","teams","setTeams","forEach","LoginLargeContainer","LoginSmallContainer","Login","username","setUsername","password","setPassword","error","setError","sendUserDetails","user","uuidv1","getAllUsers","trim","post","postLoginInfo","onSubmit","Input","required","placeholder","type","style","MyTeamsLargeContainer","MyTeamsHeader","MyTeamsSmallContainer","MyTeamLargeContainer","MyTeamSmallContainer","MyTeamImage","MyTeamName","MyTeam","index","findIndex","splice","MyTeams","RosterContainer","PlayerContainer","PlayerImageContainer","PlayerImage","PlayerInfoContainer","PlayerNameContainer","PlayerLeaguepedia","Player","player","first_name","last_name","birthday","role","hometown","href","rel","MyTeamRoster","roster","setRoster","useParams","history","useHistory","getTeamRoster","prev","players","array","item","App","setAllTournaments","logged","basename","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.60d94fef.chunk.js","sourcesContent":["import styled, { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n    *{\n        box-sizing: border-box;\n        margin: 0;\n        padding: 0;\n        font-family: sans-serif;\n    }\n`\n\nexport const Container = styled.section`\n    z-index: 1;\n    width: 100%;\n    max-width: 1300px;\n    margin-right: auto;\n    margin-left: auto;\n    padding-right: 50px;\n    padding-left: 50px;\n\n    @media screen and (max-width: 991px){\n        padding-right: 30px;\n        padding-left: 30px;\n    }\n\n`","import styled from 'styled-components'\nimport { Container } from '../../globalStyles'\nimport Select from '@material-ui/core/Select';\n\nexport const EventFilterBar = styled.section`\n    background: #FFF;\n    height: 80px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-bottom: 0.1px solid #FFFFFF;\n    @media screen and (max-width: 960px){\n        height: 160px;\n    }\n`\n\nexport const EventFilterContainer = styled(Container)`\n    display: flex;\n    justify-content: flex-start;\n    height: 80px;\n\n    @media screen and (max-width: 960px){\n        height: 160px;\n        flex-direction: column;\n        align-items: center;\n    }\n    ${Container}\n`\n\nexport const EventSelectState = styled(Select)`\n    width: 10rem;\n    margin-right: 1rem;\n\n    @media screen and (max-width: 960px){\n        margin-bottom: 1rem;\n    }\n`\n","import { FormControl, InputLabel, MenuItem } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport { EventFilterBar, EventFilterContainer, EventSelectState } from './EventFilter.elements'\nimport { getTournamentsByTime } from '../../services'\nimport { getUniqueArray } from '../../App'\n\nconst EventFilter = ({ allTournaments, setTourArray, tourArray }) => {\n\n    const [selectGame, setSelectGame] = useState('')\n    const [selectTime, setSelectTime] = useState('')\n\n    const handleSelectGame = (e) => {\n        setSelectGame(e.target.value)\n        console.log(selectGame);\n    }\n\n    const handleSelectTime = (e) => {\n        setSelectTime(e.target.value)\n        console.log(selectGame);\n    }\n\n    useEffect(() => {\n        if (selectTime === '') {\n            let tmp = [...allTournaments]\n            setTourArray(tmp.filter(el => el.videogame.slug === selectGame))\n        }\n        else if (selectTime !== '') {\n            getTournamentsByTime(selectTime).then(res => {\n                if (selectGame === '') {\n                    setTourArray(getUniqueArray(res.data))\n                }\n                else {\n                    setTourArray(getUniqueArray(res.data).filter(el => el.videogame.slug === selectGame))\n                }\n            })\n        }\n        else {\n            setTourArray(getUniqueArray(allTournaments))\n        }\n        console.log(tourArray);\n\n    }, [selectTime, selectGame])\n\n\n    return (\n        <EventFilterBar>\n            <EventFilterContainer>\n                <FormControl>\n                    <InputLabel>Tournaments</InputLabel>\n                    <EventSelectState value={selectTime} onChange={handleSelectTime}>\n                        <MenuItem value=\"running\">Running</MenuItem>\n                        <MenuItem value=\"past\">Past</MenuItem>\n                        <MenuItem value=\"upcoming\">Upcoming</MenuItem>\n                    </EventSelectState>\n                </FormControl>\n                <FormControl>\n                    <InputLabel>Game</InputLabel>\n                    <EventSelectState value={selectGame} onChange={handleSelectGame}>\n                        <MenuItem value=\"dota-2\">Dota 2</MenuItem>\n                        <MenuItem value=\"league-of-legends\">LoL</MenuItem>\n                        <MenuItem value=\"cs-go\">CS:GO</MenuItem>\n                        <MenuItem value=\"ow\">Overwatch</MenuItem>\n                        <MenuItem value=\"rl\"> Rocket League</MenuItem >\n                    </EventSelectState >\n                </FormControl >\n            </EventFilterContainer >\n        </EventFilterBar >\n    )\n}\n\nexport default EventFilter","import axios from 'axios'\n\nexport const getAllTournaments = () => {\n    return axios.get('https://api.pandascore.co/tournaments?token=vQZeP5I4e_oFj5g8ixMW6s4fi7HmTYSF3bviRp69GgekbEKCDHw')\n}\n\nexport const getTournamentsByTime = (time) => {\n    return axios.get(`https://api.pandascore.co/tournaments/${time}?token=vQZeP5I4e_oFj5g8ixMW6s4fi7HmTYSF3bviRp69GgekbEKCDHw`)\n}\n\nexport const getLolTeams = () => {\n    return axios.get('https://api.pandascore.co/lol/teams?token=vQZeP5I4e_oFj5g8ixMW6s4fi7HmTYSF3bviRp69GgekbEKCDHw')\n}\n\nexport const getWorldsInfo = () => {\n    return axios.get('https://api.pandascore.co/series/2987/tournaments?token=vQZeP5I4e_oFj5g8ixMW6s4fi7HmTYSF3bviRp69GgekbEKCDHw')\n}\n\nexport const postLoginInfo = (user) => {\n    return axios.post('http://localhost:3005/users', user)\n}\n\nexport const getAllUsers = (user) => {\n    return axios.get('http://localhost:3005/users', user)\n}\n\nexport const getTeamRoster = (id) => {\n    return axios.get(`https://api.pandascore.co/teams/${id}?token=vQZeP5I4e_oFj5g8ixMW6s4fi7HmTYSF3bviRp69GgekbEKCDHw`)\n}","import styled from 'styled-components'\nimport { BiGame } from 'react-icons/bi'\nimport { Container } from '../../globalStyles'\nimport { Link } from 'react-router-dom'\n\nexport const Nav = styled.nav`\n    background: #262635;\n    height: 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: sticky;\n    z-index: 999;\n    top: 0;\n`\n\nexport const NavbarContainer = styled(Container)`\n    display: flex;\n    justify-content: space-between;\n    height: 100px;\n\n    ${Container}\n`\n\nexport const NavLogo = styled(Link)`\n    margin-bottom: 0.5rem;\n    color: #F3F7F7;\n    justify-self: start;\n    cursor: pointer;\n    text-decoration: none;\n    font-size: 2rem;\n    display: flex;\n    align-items: center;\n`\n\nexport const NavIcon = styled(BiGame)`\n    margin-right: 0.5rem;\n`\n\nexport const MobileIcon = styled.section`\n    display: none;\n\n    @media screen and (max-width: 960px) {\n        display: block;\n        position: absolute;\n        top: 10px;\n        right: 0;\n        transform: translate(-100%, 60%);\n        font-size: 1.8rem;\n        cursor: pointer;\n    }\n`\n\nexport const NavMenu = styled.ul`\n    display: flex;\n    align-items: center;\n    list-style: none;\n    text-align: center;\n    margin-bottom: 0.5rem;\n\n    @media screen and (max-width: 960px){\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n        height: 90vh;\n        position: absolute;\n        top: 80px;\n        left: ${({ click }) => (click ? 0 : '-100%')};\n        opacity: 1;\n        transition: all 0.5s ease;\n        background: #262635;\n    }\n\n    button{\n        margin-left: 1rem;\n\n\n    @media screen and (max-width: 960px){\n        margin-top: 2rem;\n    }\n    }\n`\n\nexport const NavItem = styled.li`\n    height: 80px;\n    border-bottom: 2px solid transparent;\n\n    &:hover {\n        border-bottom: 2px solid #A8495E;\n    }\n\n    @media screen and (max-width: 960px){\n        &:hover {\n        border: none;\n        }\n    }\n`\n\nexport const NavLinks = styled(Link)`\n    color: #F3F7F7;\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    padding: 0.5rem 1rem;\n    height: 100%;   \n\n    @media screen and (max-width: 960px) {\n        text-align: center;\n        padding: 2rem;\n        width: 100%;\n        display: table;\n\n        &:hover {\n            color: #A8495E;\n            transition: all 0.5s ease;\n        }\n    }\n`\n\n","import { Button } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { FaBars, FaTimes } from 'react-icons/fa'\nimport { IconContext } from 'react-icons/lib'\nimport { MobileIcon, Nav, NavbarContainer, NavIcon, NavItem, NavLinks, NavLogo, NavMenu } from './Navbar.elements'\n\n\nconst Navbar = ({ setLogged }) => {\n\n    const [click, setClick] = useState(false)\n\n    const handleClick = () => setClick(!click)\n\n    const handleLogout = () => {\n        setLogged(false)\n    }\n\n    return (\n        <>\n            <IconContext.Provider value={{ color: '#A8495E' }}>\n                <Nav>\n                    <NavbarContainer>\n                        <NavLogo to=\"/\">\n                            <NavIcon />\n                    E-SPORTS APP\n                </NavLogo>\n                        <MobileIcon onClick={handleClick}>\n                            {click ? <FaTimes /> : <FaBars />}\n                        </MobileIcon>\n                        <NavMenu onClick={handleClick} click={click}>\n                            <NavItem>\n                                <NavLinks exact to='/'>\n                                    Home\n                                </NavLinks>\n                            </NavItem>\n                            <NavItem>\n                                <NavLinks to='/teams'>\n                                    Teams\n                                </NavLinks>\n                            </NavItem>\n                            <NavItem>\n                                <NavLinks to='/worlds'>\n                                    Worlds 2020\n                                </NavLinks>\n                            </NavItem>\n                            <NavLinks to='/myteams'>\n                                <Button variant=\"contained\" color=\"secondary\">\n                                    MY TEAMS\n                                </Button>\n                            </NavLinks>\n                            <Button onClick={handleLogout} variant=\"contained\" color=\"secondary\">\n                                LOGOUT\n                            </Button>\n                        </NavMenu>\n                    </NavbarContainer>\n                </Nav>\n            </IconContext.Provider>\n        </>\n    )\n}\n\nexport default Navbar","import styled from 'styled-components'\n\nexport const EventContainer = styled.section`\n    background-color: #F5F5F5;\n    height: 120px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    /* border: 0.2px solid #A8495E; */\n    box-shadow: 0px 0px 0px 1px rgba(0,0,0,0.3);\n`\n\nexport const EventImageContainer = styled.section`\n    height: 100%;\n    width: 120px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n`\n\nexport const EventImage = styled.img`\n    padding-left: 20px;\n    padding-right: 20px;\n\n    @media screen and (max-width: 991px){\n        width: 100px;\n    }\n`\n\nexport const EventDescContainer = styled.section`\n    margin-right: 4rem;\n    height: 90%;\n    width: 75%;\n\n    h2{\n        margin-top: 1rem;\n        font-size: 20px;\n        color: #262635;\n\n        @media screen and (max-width: 480px){\n            font-size: 15px;\n        }\n    }\n`","import React from 'react'\nimport { EventContainer, EventImage, EventImageContainer, EventDescContainer } from './Event.elements'\nimport { Link } from 'react-router-dom'\n\nconst Event = ({ event }) => {\n\n    let eventDate = event.begin_at.slice(0, 9)\n\n\n    return (\n        <Link to={`/tournaments/${event.id}`}>\n            <EventContainer>\n                <EventImageContainer>\n                    <EventImage src={event.league.image_url} />\n                </EventImageContainer>\n                <EventDescContainer>\n                    <h2>{event.league.name + \" \" + event.serie.full_name}</h2>\n                    <p>Starts: {eventDate}</p>\n                </EventDescContainer>\n            </EventContainer>\n        </Link>\n    )\n}\n\nexport default Event","import styled from 'styled-components'\nimport { Container } from '../../globalStyles'\n\n\nexport const EventListLargeContainer = styled.section`\n    background-color: #F5F5F5;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    section{\n        button{\n            margin-top: 1rem;\n            margin-right: 1rem;\n        }\n    }\n`\nexport const EventListSmallContainer = styled(Container)`\n    margin: auto;\n    margin-top: 5rem;\n    width: 90%;\n    background-color: #F5F5F5;\n    height: 180vh;\n\n    @media screen and (max-width: 960px){\n        width: 100%;\n    }\n\n    a{\n        text-decoration: none;\n    }\n\n`\n\nexport const EventListGrid = styled.section`\n    display: grid;\n    grid-template-columns: 1fr;\n`\n","import { Button } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport Event from '../Event/Event'\nimport { EventListLargeContainer, EventListSmallContainer, EventListGrid } from './EventList.elements'\n\nconst EventList = ({ tourArray }) => {\n\n    const [count, setCount] = useState(0)\n\n    useEffect(() => {\n        setCount(0)\n    }, [tourArray])\n\n    return (\n        <EventListLargeContainer>\n            <section>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    disabled={count === 0}\n                    onClick={() => setCount(count - 10)}\n                >\n                    Back\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    disabled={count > tourArray.length - 10}\n                    onClick={() => setCount(count + 10)}\n                >\n                    Next\n                </Button>\n            </section>\n            <EventListSmallContainer>\n                <EventListGrid>\n                    {tourArray.slice(count, count + 10).map(el =>\n                        <Event\n                            key={el.serie_id}\n                            event={el}\n                        />)}\n                </EventListGrid>\n            </EventListSmallContainer>\n        </EventListLargeContainer>\n    )\n}\n\nexport default EventList","import styled from 'styled-components'\n\nexport const WorldsContainer = styled.section`\n    background-color: gray;\n    height: 100vh;\n    width: 100%;\n`\n\nexport const WorldsHeaderContainer = styled.section`\n    background: #FFF;\n    height: 80px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-bottom: 0.1px solid #FFFFFF;\n    @media screen and (max-width: 960px){\n        height: 160px;\n    }\n`\n","import React from 'react'\nimport { WorldsContainer, WorldsHeaderContainer } from './Worlds.elements'\n\nconst Worlds = (game) => {\n    return (\n        <WorldsContainer>\n            <WorldsHeaderContainer>\n                {/* <HeaderNav>\n                    <ul>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                    </ul>\n                </HeaderNav> */}\n            </WorldsHeaderContainer>\n            {/* <WorldsSelectContainer>\n\n            </WorldsSelectContainer>\n\n            <WorldsGridContainer>\n                <WorldsMatchesContainer>\n\n                </WorldsMatchesContainer>\n                <WorldsStandingsContainer>\n\n                </WorldsStandingsContainer>\n            </WorldsGridContainer> */}\n        </WorldsContainer>\n    )\n}\n\nexport default Worlds","import styled from 'styled-components'\n\nexport const TeamsContainer = styled.section`\n    background-color: #F5F5F5;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n`\n\nexport const TeamsHeaderContainer = styled.section`\n    background-color: #F5F5F5;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 70px;\n\n    @media screen and (max-width: 960px){\n        height: 80px;\n        align-items: center;\n        justify-content:center;\n    }\n\n    h2 {\n        color: #262635;\n    }\n`\n\nexport const TeamsFilterForm = styled.form`\n    margin-left: 2rem;\n\n    @media screen and (max-width: 480px){\n        margin: 0;\n    }\n`\n\nexport const TeamsGridContainer = styled.section`\n    background-color: #F5F5F5;\n    width:80%;\n    height: 100%;\n    display: flex;\n    flex-flow: row wrap;\n    padding-top: 3rem;\n\n    @media screen and (max-width: 991px){\n        width: 100%;\n    }\n`","import { Fab } from '@material-ui/core'\nimport styled from 'styled-components'\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\n\nexport const TeamContainer = styled.section`\n    height: 200px;\n    width: 180px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex-direction: column;\n    box-shadow: 0 6px 8px 2px hsla(0, 0%, 0%, 0.2);\n    margin: 2rem;\n\n    &:hover {\n        box-shadow: 0 10px 12px 2px hsla(0, 0%, 0%, 0.4);\n        transition: box-shadow 0.5s ease;\n    }\n\n    @media screen and (max-width: 960px){\n        height: 150px;\n        width: 130px;\n    }\n\n`\n\nexport const TeamImage = styled.img`\n    width: 80%;\n`\nexport const TeamName = styled.span`\n    height: 20%;\n    color: #262635;\n    position: sticky;\n    padding-bottom: 1rem;\n    @media screen and (max-width: 960px){\n        font-size: 0.9rem;\n        justify-self: center;\n    }\n`\n\nexport const TeamLike = styled(Fab)`\n    width: 10px;\n    margin-top: 2rem;\n\n    &:disabled{\n        display:none;\n    }\n`\nexport const TeamLikeIcon = styled(FavoriteIcon)`\n    width: 10px;\n    height: 10px;\n\n`","import FavoriteIcon from '@material-ui/icons/Favorite';\nimport React, { useRef, useState } from 'react'\nimport { TeamContainer, TeamName, TeamImage, TeamLike } from './Team.elements'\n\nconst Team = ({ team, favTeams, setFavTeams }) => {\n\n    const [button, setButton] = useState(false)\n\n    let btnRef = useRef();\n\n    const handleLike = (e) => {\n        e.preventDefault()\n        if (btnRef.current) {\n            btnRef.current.setAttribute(\"disabled\", \"disabled\");\n        }\n        let tmp = [...favTeams]\n        tmp.push(team)\n        setFavTeams(tmp)\n        console.log(favTeams)\n    }\n\n    // const handleLike = () => {\n\n    // }\n\n    return (\n        <TeamContainer\n            onMouseEnter={(e) => setButton(true)}\n            onMouseLeave={(e) => setButton(false)}\n        >\n            {button ?\n                <TeamLike\n                    aria-label=\"like\"\n                    onClick={handleLike}\n                    ref={btnRef}\n                >\n                    <FavoriteIcon />\n                </TeamLike>\n                :\n                <>\n                    <TeamImage src={team.image_url} />\n                    <TeamName>\n                        {team.name}\n                    </TeamName>\n                </>}\n        </TeamContainer>\n    )\n}\n\nexport default Team","import React, { useEffect, useState } from 'react'\nimport { getWorldsInfo } from '../../services'\nimport { TeamsContainer, TeamsHeaderContainer, TeamsGridContainer } from './Teams.elements'\nimport Team from './Team/Team'\n\nconst Teams = ({ favTeams, setFavTeams }) => {\n\n    const [teams, setTeams] = useState([])\n\n\n    useEffect(() => {\n        getWorldsInfo().then(res => {\n            let tmp = []\n            res.data.forEach(el => {\n                tmp.push(...el.teams)\n            })\n            setTeams(tmp)\n        })\n        console.log(teams);\n    }, [])\n\n\n    return (\n        <TeamsContainer>\n            <TeamsHeaderContainer>\n                <h2>CHOOSE YOUR WORLDS 2020 TEAMS </h2>\n            </TeamsHeaderContainer>\n            <TeamsGridContainer>\n                {teams.map(el => <Team key={el.id} team={el} favTeams={favTeams} setFavTeams={setFavTeams} />)}\n            </TeamsGridContainer>\n        </TeamsContainer>\n    )\n}\n\nexport default Teams","import styled from 'styled-components'\n\nexport const LoginLargeContainer = styled.section`\n    height: 100vh;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #262635;\n`\nexport const LoginSmallContainer = styled.section`\n    height: 300px;\n    width: 250px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    align-content: space-between;\n    justify-content: center;\n    box-shadow: 0 6px 8px 2px hsla(0, 0%, 0%, 0.2);\n    border-radius: 10px;\n    background-color: #FFF;\n    h2 {\n        color:\n    }\n    form {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n\n        div{\n            margin-bottom: 2rem;\n            width: 80%;\n        }\n    }\n\n`\n\n","import { Button, Input } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { v1 as uuidv1 } from 'uuid'\nimport { getAllUsers, postLoginInfo } from '../../services';\nimport { LoginSmallContainer, LoginLargeContainer } from './Login.elements';\n\nconst Login = ({ setLogged }) => {\n\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [error, setError] = useState(false)\n\n    const validateInput = () => {\n        if (username.trim().length === 0 || password.trim().length === 0) {\n            setError(true)\n            return true\n        }\n        else return false\n    }\n\n    const sendUserDetails = () => {\n        const user = {\n            id: uuidv1(),\n            username: username,\n            password: password,\n            teams: []\n        }\n        getAllUsers().then(res => {\n            res.data.forEach(el => {\n                if (el.username === user.username) {\n                    setError(true)\n                }\n            })\n        })\n        if (!validateInput() && error === false) {\n            postLoginInfo(user)\n            setError(false)\n            setLogged(true)\n        }\n    }\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n        sendUserDetails()\n    }\n\n    return (\n        <LoginLargeContainer>\n            <LoginSmallContainer>\n                <h3>LOGIN</h3>\n                <form onSubmit={handleLogin} >\n                    <Input onChange={(e) => setUsername(e.target.value)} required placeholder=\"Username\" />\n                    <Input onChange={(e) => setPassword(e.target.value)} required type=\"password\" placeholder=\"Password\" />\n                    <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n                        LOGIN\n                </Button>\n                    {error ? <p style={{ color: 'red' }}>Invalid input</p> : null}\n                </form>\n            </LoginSmallContainer>\n        </LoginLargeContainer>\n    )\n}\n\nexport default Login","import styled from 'styled-components'\n\nexport const MyTeamsLargeContainer = styled.section`\n    height: 100vh;\n    width: 100%;\n    background: #F5F5F5;\n    position: absolute;\n    top: 100px;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n`\n\nexport const MyTeamsHeader = styled.section`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-top: 2rem;\n    color: #262635;\n`\n\nexport const MyTeamsSmallContainer = styled.section`\n    background-color: #F5F5F5;\n    width:80%;\n    height: 100%;\n    display: flex;\n    flex-flow: row wrap;\n    padding-top: 3rem;\n\n    @media screen and (max-width: 991px){\n        width: 100%;\n    }\n`","import styled from 'styled-components'\n\nexport const MyTeamLargeContainer = styled.section`\n    height: 240px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex-direction: column;\n\n    button {\n        margin-top: 1rem;\n    }\n\n    @media screen and (max-width: 960px){\n        height: 200px;\n        width: 130px;\n    }\n`\n\nexport const MyTeamSmallContainer = styled.section`\n    height: 200px;\n    width: 180px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex-direction: column;\n    box-shadow: 0 6px 8px 2px hsla(0, 0%, 0%, 0.2);\n    margin: 2rem;\n\n    &:hover {\n        box-shadow: 0 10px 12px 2px hsla(0, 0%, 0%, 0.4);\n        transition: box-shadow 0.5s ease;\n    }\n\n    @media screen and (max-width: 960px){\n        height: 150px;\n        width: 130px;\n    }\n\n`\n\nexport const MyTeamImage = styled.img`\n    width: 80%;\n`\nexport const MyTeamName = styled.span`\n    height: 20%;\n    color: #262635;\n    position: sticky;\n    padding-bottom: 1rem;\n    @media screen and (max-width: 960px){\n        font-size: 0.9rem;\n        justify-self: center;\n    }\n`","import { Button } from '@material-ui/core'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport { MyTeamSmallContainer, MyTeamName, MyTeamImage, MyTeamLargeContainer } from './MyTeam.elements'\n\nconst MyTeam = ({ team, favTeams, setFavTeams }) => {\n\n    const handleRemove = () => {\n        let index = favTeams.findIndex(el => el.name === team.name)\n\n        let tmp = [...favTeams]\n        tmp.splice(index, 1)\n        setFavTeams(tmp)\n    }\n\n\n    return (\n        <MyTeamLargeContainer>\n            <MyTeamSmallContainer>\n                <MyTeamImage src={team.image_url} />\n                <MyTeamName>\n                    {team.name}\n                </MyTeamName>\n            </MyTeamSmallContainer >\n            <Link to={`/myteams/${team.id}`}>\n                <Button variant=\"contained\" color=\"secondary\">\n                    ROSTER\n            </Button>\n            </Link>\n            <Button onClick={handleRemove} variant=\"contained\" color=\"secondary\">\n                REMOVE\n            </Button>\n        </MyTeamLargeContainer >\n    )\n}\n\nexport default MyTeam","import React from 'react'\nimport { MyTeamsHeader, MyTeamsLargeContainer, MyTeamsSmallContainer } from './MyTeams.elements'\nimport MyTeam from './MyTeam/MyTeam'\n\nconst MyTeams = ({ favTeams, setFavTeams }) => {\n    return (\n        <MyTeamsLargeContainer>\n            <MyTeamsHeader>\n                <h2>MY FAVOURITE TEAMS</h2>\n            </MyTeamsHeader>\n            <MyTeamsSmallContainer>\n                {favTeams.map(el => <MyTeam key={el.id} team={el} favTeams={favTeams} setFavTeams={setFavTeams} />)}\n            </MyTeamsSmallContainer>\n        </MyTeamsLargeContainer>\n    )\n}\n\nexport default MyTeams","import styled from 'styled-components'\n\nexport const RosterContainer = styled.section`\n    width: 90%;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    align-items: center;\n    margin-top: 1rem;\n    @media screen and (max-width:991px){\n        width: 90%;\n        display: flex;\n        flex-direction: column;\n    }\n\n    button::nth-child(1){\n        margin-top: 1rem;\n            width: 30px;\n    }\n`","import styled from 'styled-components'\n\nexport const PlayerContainer = styled.section`\n    width: 70%;\n    height: 150px;\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    box-shadow: 0 6px 8px 2px hsla(0, 0%, 0%, 0.2);\n    margin-top: 1rem;\n\n    @media screen and (max-width:991px){\n        width: 90%;\n        height: 300px;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        align-items: center;\n    }\n\n`\n\nexport const PlayerImageContainer = styled.section`\n        @media screen and (max-width:991px){\n            flex-shrink: 4;\n    }\n`\n\nexport const PlayerImage = styled.img`\n    width: 150px;\n`\n\nexport const PlayerInfoContainer = styled.section`\n\n`\n\nexport const PlayerNameContainer = styled.section`\n\n`\n\nexport const PlayerLeaguepedia = styled.section`\n\n`","import { Button } from '@material-ui/core'\nimport React from 'react'\nimport { PlayerContainer, PlayerImage, PlayerImageContainer, PlayerInfoContainer, PlayerLeaguepedia, PlayerNameContainer } from './Player.elements'\n\nconst Player = ({ player }) => {\n\n    const formatRole = () => {\n        if (player.role === 'jun') {\n            return 'Jungle'\n        }\n        if (player.role === 'sup') {\n            return 'Support'\n        }\n        if (player.role === 'mid') {\n            return 'Mid'\n        }\n        if (player.role === 'adc') {\n            return 'ADC'\n        }\n        if (player.role === 'top') {\n            return 'Top'\n        }\n    }\n\n    return (\n        <PlayerContainer>\n            <PlayerImageContainer>\n                <PlayerImage src={player.image_url} />\n            </PlayerImageContainer>\n            <PlayerNameContainer>\n                <h2>{player.name}</h2>\n                <p>{player.first_name} {player.last_name}</p>\n            </PlayerNameContainer>\n            <PlayerInfoContainer>\n                <p>BIRTHDATE: {player.birthday}</p>\n                <p>ROLE: {formatRole()}</p>\n                <p>COUNTRY: {player.hometown}</p>\n            </PlayerInfoContainer>\n            <PlayerLeaguepedia>\n                <a href={`https://lol.gamepedia.com/${player.name}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <Button variant=\"contained\" color=\"primary\">\n                        Biography\n                    </Button>\n                </a>\n            </PlayerLeaguepedia>\n        </PlayerContainer >\n    )\n}\n\nexport default Player","import { Button } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom';\nimport { getTeamRoster } from '../../../services';\nimport { RosterContainer } from './MyTeamRoster.elements';\nimport Player from './Player/Player';\n\nconst MyTeamRoster = ({ favTeams }) => {\n\n    const [roster, setRoster] = useState([])\n\n    // {\n    //     birth_year: 1997,\n    //     birthday: \"1997-02-14\",\n    //     first_name: \"Hao-Hsuan\",\n    //     hometown: \"Taiwan\",\n    //     id: 418,\n    //     image_url: \"https://cdn.pandascore.co/images/player/image/418/220px_tes_karsa_2020_split_2.png\",\n    //     last_name: \"Hung\",\n    //     name: \"Karsa\",\n    //     nationality: \"TW\",\n    //     role: \"jun\",\n    //     slug: \"karsa\"\n    // }\n\n    const id = useParams().id\n    console.log(id);\n    const history = useHistory()\n\n    useEffect(() => {\n        getTeamRoster(id).then(res => {\n            console.log(res.data);\n            setRoster(prev => [...roster, ...res.data.players])\n            console.log(roster);\n        })\n    }, [])\n\n    return (\n        <RosterContainer>\n            <Button onClick={() => history.push('/myteams')} variant=\"contained\" color=\"secondary\">\n                Back\n            </Button>\n            {roster.map(el => <Player key={el.id} player={el} />)}\n        </RosterContainer>\n    )\n}\n\nexport default MyTeamRoster","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, } from 'react-router-dom'\nimport { GlobalStyle } from './globalStyles'\nimport EventFilter from './components/EventFilter/EventFilter';\nimport Navbar from './components/Navbar/Navbar';\nimport EventList from './components/EventList/EventList'\nimport { getAllTournaments } from './services';\nimport Worlds from './components/Worlds/Worlds';\nimport Teams from './components/Teams/Teams';\nimport Login from './components/Login/Login';\nimport MyTeams from './components/MyTeams/MyTeams';\nimport MyTeamRoster from './components/MyTeams/MyTeamRoster/MyTeamRoster';\n\nexport const getUniqueArray = (array) => {\n  let tmp = []\n  array.filter((item) => {\n    let index = tmp.findIndex(el => el.serie_id === item.serie_id)\n    if (index <= -1) {\n      tmp.push(item)\n    }\n    return null\n  })\n  return tmp\n}\n\nfunction App() {\n\n  const [tourArray, setTourArray] = useState([])\n  const [allTournaments, setAllTournaments] = useState([])\n  const [favTeams, setFavTeams] = useState([])\n\n  useEffect(() => {\n    getAllTournaments().then(res => {\n      console.log(res.data);\n      setAllTournaments(getUniqueArray(res.data))\n      setTourArray(getUniqueArray(res.data))\n    })\n\n  }, [])\n\n  const [logged, setLogged] = useState(false)\n\n  return (\n    <>\n      {logged ?\n        <Router basename=\"/react-esports-app\">\n          <GlobalStyle />\n          <Navbar setLogged={setLogged} />\n          <Switch>\n            <Route exact path=\"/\">\n              <EventFilter tourArray={tourArray} setTourArray={setTourArray} allTournaments={allTournaments} />\n              <EventList tourArray={tourArray} />\n            </Route>\n            <Route path=\"/worlds\">\n              <Worlds />\n            </Route>\n            <Route path=\"/teams\">\n              <Teams favTeams={favTeams} setFavTeams={setFavTeams} />\n            </Route>\n            <Route exact path=\"/myteams\">\n              <MyTeams favTeams={favTeams} setFavTeams={setFavTeams} />\n            </Route>\n            <Route path=\"/myteams/:id\">\n              <MyTeamRoster favTeams={favTeams} />\n            </Route>\n          </Switch>\n        </Router>\n        :\n        <Login setLogged={setLogged} />}\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}